{"version":3,"file":"static/js/878.e85cef71.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","hooks/filterHook.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/ContactsView.js"],"sourcesContent":["import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsSlice';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const onAddContact = contact => {\n    if (!!contacts && contacts.some(item => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    addContact(contact);\n  };\n\n  const onChangeInput = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      // eslint-disable-next-line\n      const reg = /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g;\n      if (!reg.test(value)) {\n        return;\n      }\n      setNumber(value);\n    }\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n\n    if (name && number) {\n      onAddContact({\n        name,\n        number,\n      });\n    } else {\n      alert('The number field and name are empty, fill them in!');\n    }\n\n    reset(event);\n  };\n\n  const reset = event => {\n    setName('');\n    setNumber('');\n    event.currentTarget.reset();\n  };\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography\n        style={{\n          fontSize: '40px',\n          fontWeight: 'bold',\n          lineHeight: '2.8',\n          marginBottom: '20px',\n        }}\n        variant=\"h3\"\n      >\n        Phonebook\n      </Typography>\n      <Box\n        component=\"form\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        sx={{\n          '& > :not(style)': { m: 1 },\n        }}\n        autoComplete=\"off\"\n        onSubmit={onSubmitForm}\n\n      >\n        <TextField\n          sx={{ width: '50ch' }}\n          type=\"text\"\n          name=\"name\"\n          onChange={onChangeInput}\n          id=\"filled-basic\"\n          label=\"Name\"\n          variant=\"filled\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          sx={{ width: '50ch', }}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          id=\"filled-basic\"\n          label=\"Number\"\n          variant=\"filled\"\n          onChange={onChangeInput}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button disabled={!name || !number} type=\"submit\">\n          Add Contact\n        </Button>\n      </Box>\n    </Box >\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterAction } from '../redux/filterSlice';\nimport { onFilterChange } from '../redux/filterSlice';\n\nexport const useFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(onFilterChange);\n  const onChangeFilter = event => dispatch(filterAction.changeFilter(event));\n\n  return { filter, changeFilter: onChangeFilter };\n};\n","import { Box, TextField, Typography } from '@mui/material';\nimport { useFilter } from '../../hooks/filterHook';\n\nexport const Filter = () => {\n  const { filter, changeFilter } = useFilter();\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        '& > :not(style)': { m: 2 },\n      }}\n    >\n      <Typography\n        style={{\n          fontSize: '35px',\n          fontWeight: 'bold',\n          lineHeight: '2.8',\n          marginBottom: '10px',\n        }}\n        variant=\"h3\"\n      >\n        Contacts\n      </Typography>\n      <TextField\n        sx={{ width: '50ch' }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => changeFilter(event.target.value)}\n        id=\"filled-basic\"\n        label=\"Find contacts by name\"\n        variant=\"filled\"\n        required\n      />\n    </Box>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { ListItemText, ListItem } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  return (\n    <ListItem>\n      <ListItemText primary={`${name}: ${number}`} />\n      <IconButton\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n        edge=\"end\"\n        aria-label=\"delete\"\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { Grid, List, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useFilter } from 'hooks/filterHook';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { useMemo } from 'react';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark' ? '#1A2027' : 'rgba(0, 0, 0, 0.06)',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  minWidth: 400,\n  color: theme.palette.text.primary,\n}));\n\nexport const ContactsList = () => {\n  const { filter } = useFilter();\n  const { data: contacts } = useGetContactsQuery();\n\n  const filteredContacts = useMemo(() => {\n    return (\n      contacts?.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n      ) ?? []\n    );\n  }, [filter, contacts]);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      sx={{ flexGrow: 1 }}\n    >\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid item xs={12} md={6}>\n          <List>\n            {filteredContacts &&\n              filteredContacts.map(({ name, number, id }) => (\n                <ContactItem key={id} name={name} number={number} id={id} />\n              ))}\n          </List>\n        </Grid>\n      </StyledPaper>\n    </Box>\n  );\n};\n","import { Box } from '@mui/material';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/index';\nimport { ContactsList } from '../components/ContactList/ContactList';\n\nconst ContactsView = () => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      backgroundColor=\"#ccffcd\"\n      paddingBottom=\"250px\"\n      sx={{ backgroundColor: '#f5f5f5' }}\n    >\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </Box>\n  );\n};\n\nexport default ContactsView;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","onChangeInput","event","target","value","test","reset","currentTarget","Box","textAlign","Typography","style","fontSize","fontWeight","lineHeight","marginBottom","variant","component","display","justifyContent","flexDirection","sx","m","autoComplete","onSubmit","contact","preventDefault","some","item","alert","TextField","width","type","onChange","id","label","pattern","title","required","Button","disabled","useFilter","dispatch","useDispatch","filter","useSelector","onFilterChange","changeFilter","filterAction","Filter","alignItems","ContactItem","useDeleteContactMutation","deleteContact","isLoading","ListItem","ListItemText","primary","IconButton","onClick","edge","Delete","StyledPaper","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","minWidth","color","text","ContactsList","filteredContacts","useMemo","toLocaleLowerCase","includes","flexGrow","my","mx","p","Grid","xs","md","List","map","paddingBottom"],"sourceRoot":""}